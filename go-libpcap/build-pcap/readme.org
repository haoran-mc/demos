

*** 物理层、以太网帧
[[file:images/1739185741.png]]

- 目标 Mac 地址：6 字节；
- 源 Mac 地址：6 字节；
- 类型：用于辨别上层协议，2 字节（0x08、0x00 为 IPv4）；
- 数据：64-1500 字节。


*** IP 协议
[[file:images/1739186287.png]]

- 版本（Version）因为目前仍主要使用 IPv4 版本，所以这里的值通常是 0x4，占 4 位；
- 包头长度（Internet Header Length, IHL）指明 IPv4 协议长度的字节数包含多少个 32 位。除非使用了可选字段，否则 IPv4 的长度为（20个字节 = 160位 = 5*32），所以 IHL 的值是 5，占 4 位；
- 服务类型（Type of Service, TOS）定义 IP 封包在传送过程中要求的服务类型，如果所有的 bit 都是 0，那么意味是一般服务，占 8 位；
  #+begin_example
    xxx␣␣␣␣␣ Routine 过程字段，设置了数据包的重要性，取值越大数据越重要，取值范围 0（正常）~7（网络控制）
    ␣␣␣x␣␣␣␣ Delay 延迟字段，取值 0（正常）、1（期待低的延迟）
    ␣␣␣␣x␣␣␣ Throughput 流量字段，取值 0（正常）、1（期待高的流量）
    ␣␣␣␣␣x␣␣ Reliability 可靠性字段，取值 0（正常）、1（期待高的可靠性）
    ␣␣␣␣␣␣x␣ ECN-Capable Transport 显式拥塞指示传输字段，取值 0（不支持 ECN）、1（支持 ECN）
    ␣␣␣␣␣␣␣x Congestion Experienced 拥塞预警字段，取值 0（正常，不拥塞）、1（拥塞）
  #+end_example
- 包长度（Total Length，TL）占 16 位；
- 标识（Identification）每一个IP封包都有一个 16 位的唯一识别码，占 16 位；
- 标记（Flags）占 3 位；
  #+begin_example
    x␣␣ Reserved Fragment 保留分段，当此值为 0 的时候表示目前未被使用；
    ␣x␣ Don't Fragment 不分段，值为 0 表示封包可以被分段、1 则不能被分割；
    ␣␣x More Fragment 更多分段，当上一个值为 0 时，此值为 0 就表示该封包是最后一个封包，如果为 1 则表示其后还有被分割的封包；
  #+end_example
- 分段偏移（Fragment Offset，FO）当封包被分段之后，由于网络或其它因素影响其抵达顺序不和切割顺序一致，所以在封包分段时为各片段做好定位记录，以便重组时能够对号入座。值为多少个字节，如果封包并没有被分段，则FO值为“0”。占 13 位；
- 生存时间（Time To Live，TTL）数据报可以经过的最多路由器数，占 8 位；
- 协议（Protocol，PROT）占 8 位；
  [[file:images/1739241715.png]]
- 头校验和（Header Checksum）占 16 位；
- 源地址（Source Address，SA）占 32 位；
- 目的地址（Destination Address）占 32 位；
- 选项（Options）+填充（Padding）这两个选项较少使用，只有某些特殊的封包需要特定的控制才会利用到，共 32 位（不考虑）。


*** TCP 协议
[[file:images/1739248672.png]]

- 源端口，16bits，范围 0~65525；
- 目的端口，16bits，范围 0~65525；
- Sequence Number：数据序号，32bits，TCP 连接中传送的数据流中的每一个字节都编上一个序号。序号字段的值则指的是本报文段所发送的数据的第一个字节的序号；
- Acknoledgement Number：确认号，32bits，期望收到对方的下一个报文段的数据的第一个字节的序号；
- 数据偏移，4bits，单位为 4bits，它指出报文数据距 TCP 报头的起始处有多远（TCP 报文头长度），和 IP 一样，偏移的单位是 32bits，因为 tcp 的长度是（20个字节 = 160位 = 5*32），所以数据偏移是 5；
- 保留字段 6bits，保留今后使用，目前置 0 处理；
- URG：紧急比特，1bit，当 URG=1 时，表明紧急指针字段有效。它告诉系统此报文段中有紧急数据，应尽快传送（相当于高优先级的数据）；
- ACK：确认比特，1bit，只有当 ACK=1时确认号字段才有效。当 ACK=0 时，确认号无效；
- PSH：推送比特，1bit，接收方 TCP 收到推送比特置1的报文段，就尽快地交付给接收应用进程，而不再等到整个缓存都填满了后再向上交付；
- RST：复位比特，1bit，当RST=1时，表明TCP连接中出现严重差错(如由于主机崩溃或其他原因)，必须释放连接，然后再重新建立运输连接；
- SYN：同步比特，1bit，同步比特 SYN 置为 1，就表示这是一个连接请求或连接接受报文；
- FIN：终止比特，1bit，用来释放一个连接。当FIN=1 时，表明此报文段的发送端的数据已发送完毕，并要求释放运输连接；
- 窗口大小，16bits，窗口字段用来控制对方发送的数据量，单位为字节。TCP 连接的一端根据设置的缓存空间大小确定自己的接收窗口大小，然后通知对方以确定对方的发送窗口的上限；
- 检验和，16bits，检验和字段检验的范围包括首部和数据这两部分。在计算检验和时，要在 TCP 报文段的前面加上 12 字节的伪首部；
- 紧急指针字段，16bits，仅在 URG 标志位开启时有效，紧急指针指出在本报文段中的紧急数据的最后一个字节的序号；


*** PCAP Capture File Format
[[file:images/1739263958.png]]

每一个 pcap 文件只有一个 Pcap Header 文件头，共占 24 字节，包含 7 个字段。
- Magic（4B）：标记文件开始，并用来识别文件和字节顺序。值可以是 0xa1b2c3d4 或者 0x4dc3b2a1，如果是 0xa1b2c3d4 表示是大端模式，按照原来的顺序一个字节一个字节的读，如果是 0x4dc3b2a1 表示小端模式，下面的字节要交换顺序。
- Major（2B）：当前文件的主要版本，一般为 0x0200；
- Minor（2B）：当前文件的次要版本号，一般为 0x0400；
- ThisZone（4B）：当地的标准事件，如果用的是 GMT 则全零，一般全零；
- SigFigs（4B）：时间戳的精度，一般为全零；
- SnapLen（4B）：最大的存储长度，设置所抓获的数据包的最大长度，如果所有数据包都要抓获，将值设置为 65535；
- LinkType（4B）：链路类型。解析数据包首先要判断它的 LinkType，所以这个值很重要。一般的值为 1，即以太网常用的 LinkType（链路类型）。


每一个 pcap 文件的 Packet Header 数据包头可以有多个，每个数据包头后面都跟着真正的数据包。
- Timestamp（4B）： 时间戳高位，精确到 seconds，这是 Unix 时间戳。捕获数据包的时间一般是根据这个值；
- Timestamp（4B）： 时间戳低位，能够精确到 microseconds；
- Caplen（4B）： 当前数据区的长度，即抓取到的数据帧长度，由此可以得到下一个数据帧的位置；
- Len（4B）： 离线数据长度，网路中实际数据帧的长度，一般不大于 Caplen，多数情况下和 Caplen值一样。
